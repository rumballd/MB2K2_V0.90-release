       TTL    CEDRIC CONFIGURATION
       STTL   OVERLAY
       OPT    PAG
       PAG
************************************************
* CEDRIC CONFIGURATION OVERLAY
* FILE "CED-CNFG.TXT"
* THIS EXAMPLE RE-PRODUCES THE CONFIGURATION
* AS ORIGINALLY DISTRIBUTED
* M.J.RANDALL 1985
************************************************
* TO RECONFIGURE CEDRIC RENAME CED.CMD TO
* CED.BIN THEN ASSEMBLE CED-CNFG.TXT THEN
* APPEND IT TO CED.BIN:-
* "+++APPEND CED.BIN,CED-CNFG.BIN,CED.CMD"
* TRY "+++1.CED" TO MAKE SURE THAT IT WORKS
* IF IT DOES THEN COPY CED.CMD TO YOUR
* SYSTEM DISC. IF NOT YOU SHOULD RE-READ
* YOUR TERMINAL DOCUMENTATION AND CHECK
* YOUR VERSION OF CED-CNFG. IF ALL ELSE FAILS
* GET IN TOUCH WITH THE AUTHOR
************************************************

       ORG    $0100

************************************************
*         OPERATOR CHARACTER TABLE
************************************************

* ANY 8-BIT CHARACTER AVAILABLE FROM THE
* KEYBOARD CAN BE USED - ASCII CONTROL
* CHARACTERS ARE AVAILABLE ON MOST TERMINALS.
* IF A KEYPAD IS AVAILABLE THAT GENERATES
* SINGLE CONTROL OR "META" CHARACTERS, THESE
* CAN BE CONFIGURED TO MAKE THE LAYOUT
* CONVENIENT OR LOGICAL.
* MAKE SURE YOUR FLEX I/O ROUTINES DON'T
* STRIP PARITY IF USING "META" CHARACTERS
* (THEY HAVE BIT 7 MSB SET).
* ANY PRINTABLE CHARACTER COULD BE USED
* AS A COMMAND BUT THEN IT WOULD NOT BE
* AVAILABLE FOR INSERTION IN THE TEXT FROM
* THE KEYBOARD!

CF     FCB    $12      ^R
CB     FCB    $0C      ^L
CD     FCB    $04      ^D
CU     FCB    $15      ^U
LF     FCB    $06      ^F
LB     FCB    $02      ^B
EC     FCB    $05      ^E
EL     FCB    $18      ^X
CC     FCB    $13      ^S
MU     FCB    $1B      ESC
DL     FCB    $08      ^H BACKSPACE
TB     FCB    $09      ^I TAB
GR     FCB    $01      ^A
EW     FCB    $17      ^W
SR     FCB    $0E      ^N
PT     FCB    $10      ^P
CT     FCB    $19      ^Y
SF     FCB    $03      ^C
SB     FCB    $1A      ^Z
PH     FCB    $1C      ^SHIFT-L ON SOME KEYBDS
ZC     FCB    $0F      ^O
IC     FCB    $16      ^V
PC     FCB    $11      ^Q
M1     FCB    $14      ^T
PM     FCB    $0B      ^K
M2     FCB    $07      ^G
       FCB    0        SPARE
LE     FCB    $0A      ^J LINEFEED
SPACE  FCB    $20
RETURN FCB    $0D
       FCB    $0,$0    SPARE

************************************************
*         CONFIGURABLE "CONSTANTS"
************************************************
PASLEN FDB    $800     PASTE BUFFER LENGTH
WIDTH  FCB    80       SCREEN WIDTH
LINES  FCB    23       ONE LESS THAN DISPLAYABLE

************************************************
* TERMINAL CONTROL SEQUENCES ETC
************************************************
* IT IS ASSUMED THAT DIRECT CURSOR ADDRESSING
* IS ACHIEVED BY SENDING A SEQUENCE OF BYTES
* FOLLOWED BY TWO BYTES THAT SPECIFY THE ROW
* AND COLUMN IN ANY ORDER. ROW OR COLUMN MAY
* HAVE A CONSTANT OFFSET ADDED TO THE BYTE

XFIRST FCB    $FF
* THIS BYTE IS NON-ZERO IF THE Y (ROW)
* CO-ORDINATE IS SENT FIRST

CUROFS FCB    $20
* THIS IS THE OFFSET TO BE ADDED.
* CUROFS,CUROFS IS THE T.L.H.C.

LFFLG  FCB    $FF
* THIS BYTE IS ZERO IF THE TERMINAL AUTOMATICALLY
* PUTS THE NEXT CHARACTER AFTER THE LAST DISPLAYABLE
* ON A LINE AT THE BEGINNING OF THE NEXT LINE.
* THAT IS NO CR/LF IS NECESSARY.

RVFLG  FCB    $FF
* THIS BYTE IS ZERO IF THE TERMINAL DISPLAYS AN
* INCOMING CHARACTER WITH BIT 7 SET IN REVERSE
* VIDEO, BUT NON-ZERO IF REVERSE VIDEO NEEDS
* A CONTROL SEQUENCE

* CONTROL SEQUENCES - THESE ARE TERMINATED BY 0
* THUS A NULL (0) CANNOT BE INCLUDED IN A SEQUENCE
* 8 BYTES MAXIMUM INCLUDING TERMINATOR

CURADD FCB    $0E,0,0,0 CURSOR ADDRESS SEQUENCE
       FCB    0,0,0,0
CURLFT FCB    $08,0,0,0 CURSOR LEFT
       FCB    0,0,0,0
ERALIN FCB    $18,0,0,0 ERASE TO END OF LINE
       FCB    0,0,0,0
HOMERA FCB    $0C,0,0,0 CURSOR TO T.L.H.C AND
       FCB    0,0,0,0  CLEAR SCREEN
HOMCUR FCB    $0F,0,0,0 CURSOR TO T.L.H.C.
       FCB    0,0,0,0
RV_ON  FCB    $16,0,0,0  REVERSE VIDEO ON
       FCB    0,0,0,0
RV_OFF FCB    $17,0,0,0  REVERSE VIDEO OFF
       FCB    0,0,0,0
CUR_UP FCB    $0B,0,0,0 CURSOR UP
       FCB    0,0,0,0
CUR_DN FCB    $0A,0,0,0 CURSOR DOWN
       FCB    0,0,0,0

LAST   EQU    * IT MUST BE $0170


************************************************
*        ADVANCED CONFIGURATION
************************************************

* PRE-CONFIGURED MACROS

MACRO1 FCB    0                   COUNT OF MACRO BYTES
       FCB    0,0,0,0,0,0,0,0,0,0 UP TO 40 CAN BE USED
       FCB    0,0,0,0,0,0,0,0,0,0
       FCB    0,0,0,0,0,0,0,0,0,0
       FCB    0,0,0,0,0,0,0,0,0,0

MACRO2 FCB    0                   COUNT OF MACRO BYTES
       FCB    0,0,0,0,0,0,0,0,0,0 UP TO 40 CAN BE USED
       FCB    0,0,0,0,0,0,0,0,0,0
       FCB    0,0,0,0,0,0,0,0,0,0
       FCB    0,0,0,0,0,0,0,0,0,0

* DEFAULT TABS

TABS   FDB    8,15,24,40,0        5 AVAILABLE TAB POSITIONS
       FDB    0                   GUARD WORD

       END
